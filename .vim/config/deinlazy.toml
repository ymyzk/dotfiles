# HTML5 ominicomplete & syntax
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'htmldjango']

# CSS3 syntax
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

# for vim-jsx
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = 'javascript'

# React JSX
[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript.jsx'

# TypeScript
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

# Coq syntax
# repo = 'jvoorhis/coq.vim'

# For coquille
[[plugins]]
repo = 'let-def/vimbufsync'

[[plugins]]
repo = 'the-lambda-church/coquille'
on_ft = 'coq'
depends = 'vimbufsync'

# Scala
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'

# TOML
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'wlangstroth/vim-racket'
on_ft = 'racket'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'psosera/ott-vim'
on_ft = 'ott'

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
hook_add = '''
  let g:quickrun_config = {
              \   "_" : {
              \       "runner" : "vimproc",
              \       "runner/vimproc/updatetime" : 60
              \   },
              \   "c": {
              \      "cmdopt" : "-std=c99"
              \   }
              \}
'''

[[plugins]]
repo = 'thinca/vim-ref'
on_cmd = 'Ref'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
if = 'has("nvim")'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['context_filetype.vim', 'neosnippet-snippets']
on_event = 'InsertEnter'
on_ft = 'snippet'
hook_source = 'source ~/.vim/config/plugins/neosnippet.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim')"
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/config/plugins/deoplete.vim
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_source = 'source ~/.vim/config/plugins/tex.vim'

[[plugins]]
repo = 'cohama/the-ocamlspot.vim'
on_ft = 'ocaml'

[[plugins]]
repo = 'eagletmt/neco-ghc'
on_ft = 'haskell'
hook_add = '''
  " Disable haskell-vim omnifunc
  let g:haskellmode_completion_ghc = 0
  autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
  let g:necoghc_enable_detailed_browse = 1
'''

[[plugins]]
repo = 'ymyzk/vim-copl'
on_ft = 'copl'

[[plugins]]
repo = 'tyru/caw.vim'
on_map = [['nx', '<Plug>']]
hook_add = '''
  nmap <Leader>c <Plug>(caw:hatpos:toggle)
  vmap <Leader>c <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# It may be better to activate on different events
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = 'InsertEnter'

[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'
on_event = 'InsertEnter'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if = 'has("nvim")'
on_event = 'InsertEnter'
# Language servers are not started automatically for some reasons with lazy loading
hook_post_source = 'call lsp#enable()'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
depends = ['vim-lsp']
if = 'has("nvim")'
on_event = 'InsertEnter'

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
depends = ['vim-lsp']
if = 'has("nvim")'
on_event = 'InsertEnter'
